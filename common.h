#ifndef _COMMON_H_
#define _COMMON_H_ 1

enum error_e{
	CM_E_NONE,
    CM_E_ERR,
    CM_E_ERR_RET,
    CM_E_ZERO,
    CM_E_PTR_INVALID,
	CM_E_NO_MEMORY,
	CM_E_ACLQOS_DIFFERENT_TYPE,
	CM_E_ACLQOS_ENTRY_EXIST,
	CM_E_ACLQOS_LABEL_NOT_EXIST,
	CM_E_ACLQOS_ENTRY_NOT_EXIST,
	CM_E_ACLQOS_INVALID_KEY_TYPE,
	CM_E_ACLQOS_INVALID_ACTION,
	CM_E_ACL_GET_BLOCK_INDEX_FAILED
};
typedef enum error_e error_t;

enum cm_action_flag_e{
    CTC_ACLQOS_ACTION_DISCARD_FLAG,
    CTC_ACLQOS_ACTION_DENY_BRIDGE_FLAG,
    CTC_ACLQOS_ACTION_DENY_LEARN_FLAG,
    CTC_ACLQOS_ACTION_DENY_ROUTE_FLAG,
    CTC_ACLQOS_ACTION_DENY_REPLACE_COS_FLAG,
    CTC_ACLQOS_ACTION_DENY_REPLACE_DSCP_FLAG,
    CTC_ACLQOS_ACTION_STATS_FLAG,
    CTC_ACLQOS_ACTION_FLOW_ID_FLAGS,
    CTC_ACLQOS_ACTION_FLOW_ID_FLAG,
    CTC_ACLQOS_ACTION_FLOW_POLICER_FLAG,
    CTC_ACLQOS_ACTION_COPY_TO_CPU_FLAG,
    CTC_ACLQOS_ACTION_INVALID_FLAG    
};
typedef enum cm_action_flag_e cm_action_flags_t;


#define CM_ETH_ADDR_LEN  6
typedef uint8 mac_addr_t[CM_ETH_ADDR_LEN];

#endif

